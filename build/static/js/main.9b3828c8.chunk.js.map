{"version":3,"sources":["logo.svg","Apollo.js","actions/types.js","components/Example.jsx","actions/index.js","App.js","reducers/index.js","reducers/ExampleReducer.js","sagas/sagas.js","Store.js","components/People.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","client","ApolloClient","uri","EXAMPLE_ACTION","SAGA_ACTION","Example","addCounter","_this","props","createExample","react_default","a","createElement","this","example","onClick","Link","to","Component","connect","state","dispatch","type","Hello","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","b","setState","console","log","nextProps","concat","JSON","stringify","number","callMe","App","_this2","inputOrButton","value","text","onChange","updateText","returnSomething","change","bind","assertThisInitialized","name","pepe","map","item","index","key","val","target","className","src","logo","alt","App_Hello","updateState","itemsList","children","NavLink","style","backgroundColor","combineReducers","arguments","length","undefined","action","payload","fetchUser","mySaga","apiCall","fetch","data","regenerator_default","wrap","_context","prev","next","sent","json","put","result","info","t0","stop","_marked","_context2","takeEvery","_marked2","sagaMiddleWate","createSagaMiddleWare","store","createStore","reducers","applyMiddleware","thunk","run","GET_PEOPLE","gql","_templateObject","People","react_apollo_browser_umd","query","_ref","loading","error","message","Root","es","BrowserRouter","Switch","Route","path","exact","render","src_App_0","components_Example","component","Boolean","window","location","hostname","match","ReactDOM","src_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b3828c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import ApolloClient from \"apollo-boost\";\n\nexport const client = new ApolloClient( {\n    uri: '/graphql'\n} );","export const EXAMPLE_ACTION = 'EXAMPLE_ACTION';\nexport const SAGA_ACTION = 'SAGA_ACTION';","/* eslint-disable semi */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createExample } from '../actions'\nimport { Link } from 'react-router-dom';\n\nclass Example extends Component {\n   addCounter = () => {\n    this.props.createExample();\n  }\n\n  render() {\n    const hello = {a:\"hola\"};\n    return (\n      <div>\n        Example\n        <p>{this.props.example}</p>\n        <button onClick={this.addCounter}>Add</button>\n        <div>{hello.a}</div>\n        <Link to=\"/\">Go to HOME </Link>\n        <Link to=\"/people\">PEOPLE</Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ example: state.example });\nexport default connect(mapStateToProps, { createExample })(Example)\n","import { EXAMPLE_ACTION } from '../actions/types';\n\n\nexport const createExample = () => {\n  return (dispatch) => {\n    dispatch({'type': EXAMPLE_ACTION});\n  }\n};\n","import React, { Component } from \"react\";\nimport { NavLink  } from 'react-router-dom';\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass Hello extends Component {\n  constructor() {\n    super();\n    this.state = {\n      a: 1,\n      b: 99\n    };\n  }\n\n  updateState() {\n    this.setState(state => {\n      console.log(state);\n      return {\n        b: state.b + 1\n      };\n    });\n  }\n  componentWillReceiveProps(nextProps) {\n    console.log(`${JSON.stringify(nextProps)} NExt Props`);\n    this.setState({ a: nextProps.number });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.b}</h2>\n        <h2>{this.state.a}</h2>\n        <button onClick={this.props.callMe} />\n        <pre>{JSON.stringify(this.state)}</pre>\n        <pre>{this.props.number}</pre>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      a: 500,\n      b: 600,\n      text: \"Holando\"\n    };\n    this.change = {\n      a: 9000,\n      b: 9000\n    };\n    this.updateText = this.updateText.bind(this);\n  }\n\n  itemsList() {\n    return [\n      { name: \"hola\", pepe: \"pepe\" },\n      { name: \"hola\", pepe: \"pepe\" },\n      { name: \"hola\", pepe: \"pepe\" }\n    ].map((item, index) => (\n      <div key={index}>\n        {item.name} y {item.pepe}\n      </div>\n    ));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ a: nextProps.change.a });\n  }\n\n  updateState() {\n    this.props.change.a = this.props.change.a + 1;\n    this.change = {\n      a: this.props.change.a\n    };\n    this.setState({ a: 1 });\n    console.log(this.change);\n  }\n\n  callMe() {\n    this.setState({ a: this.state.a + 1 });\n    this.change.a = this.change.a + 1;\n  }\n\n  updateText(val) {\n    this.setState({ text: val.target.value });\n  }\n\n  inputOrButton = () => {\n    return true ? (\n      <input type=\"text\" value={this.state.text} onChange={this.updateText} />\n    ) : (\n      <button onClick={e => console.log(JSON.stringify(this.state))}>\n        Give me value\n      </button>\n    );\n  };\n  returnSomething = () => {\n    return \"hola\";\n  };\n  render() {\n    return (\n        <div className=\"App\">\n          <p>{this.returnSomething()}</p>\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <Hello callMe={this.callMe.bind(this)} number={this.change.a} />\n            <button className=\"button\" onClick={this.updateState.bind(this)} />\n          </header>\n          <h2>Hello</h2>\n          <p>{JSON.stringify(this.state)}</p>\n          <div>{this.itemsList()}</div>\n          {this.inputOrButton()}\n          <p>{this.returnSomething()}</p>\n          {this.props.children}\n          <NavLink style={{backgroundColor: 'red'}}to=\"/example\">Go to Example </NavLink>\n          <NavLink to=\"/people\">PEOPLE</NavLink>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import { ExampleReducer } from './ExampleReducer';\nimport { combineReducers } from 'redux';\n\n\nexport default combineReducers({\n  example: ExampleReducer\n});\n","import {\n  EXAMPLE_ACTION,\n  SAGA_ACTION\n} from '../actions/types'\n\nexport const ExampleReducer = (state = 100, action) => {\n  console.log(action)\n  switch (action.type) {\n    case EXAMPLE_ACTION:\n      return state + 1\n    case SAGA_ACTION:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { EXAMPLE_ACTION, SAGA_ACTION } from '../actions/types';\n\nconst apiCall = () => fetch('https://dev.bbvaapimarket.com/api/terms/general/es')\n\nfunction * fetchUser (action) {\n  try {\n    const data = yield call(apiCall, '')\n    const value = () => data.json()\n    const item = yield call(value, '')\n    console.log(item)\n    yield put({ type: SAGA_ACTION, payload: item.result.info })\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nfunction * mySaga () {\n  yield takeEvery(EXAMPLE_ACTION, fetchUser)\n}\n\n/* function* mySaga() {\n  yield takeLatest(EXAMPLE_ACTION, fetchUser);\n} */\n\nexport default mySaga\n","import { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleWare from 'redux-saga';\nimport mySaga from './sagas/sagas';\n\n\nconst sagaMiddleWate = createSagaMiddleWare();\nconst store = createStore(reducers, {}, applyMiddleware(thunk, sagaMiddleWate));\nsagaMiddleWate.run(mySaga);\n\nexport default store;","import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { Link } from 'react-router-dom';\n\nconst GET_PEOPLE = gql`\n  {\n    people {\n      name\n      age\n    }\n  }\n`;\n\nconst People = props => {\n  debugger;\n  return (\n    <Query query={GET_PEOPLE}>\n      {({ loading, error, data }) => {\n        if (loading) return \"Loading...\";\n        if (error) return `Error! ${error.message}`;\n\n        return <p>{JSON.stringify(data)}\n        <br />\n        <Link to=\"/\">HOME</Link></p>;\n      }}\n    </Query>\n  );\n};\n\nexport default People;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { client } from \"./Apollo\";\nimport Example from \"./components/Example\";\nimport App from \"./App\";\nimport store from \"./Store\";\nimport People from \"./components/People\";\n\nclass Root extends Component {\n  render() {\n    const change = {\n      a: 9000,\n      b: 9000\n    };\n    return (\n      <Provider store={store}>\n        <ApolloProvider client={client}>\n          <Router>\n            <Switch>\n              <Route path=\"/\" exact render={() => <App change={change} />} />      \n              <Route path=\"/example\" render={() => <Example />} />\n              <Route path=\"/people\" component={People} />\n            </Switch>\n          </Router>\n        </ApolloProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}